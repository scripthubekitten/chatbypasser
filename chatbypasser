--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
--[[ 
created by Jaimz join my discord
https://discord.com/invite/Yb6JNPAm3u
]]
setclipboard("https://discord.com/invite/Yb6JNPAm3u")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local TextChatService = game:GetService("TextChatService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local emojiLetters = {
    A = "üÖ∞", B = "üÖ±", C = "üÖ≤", D = "üÖ≥", E = "üÖ¥", 
    F = "üÖµ", G = "üÖ∂", H = "üÖ∑", I = "üÖ∏", J = "üÖπ", 
    K = "üÖ∫", L = "üÖª", M = "üÖº", N = "üÖΩ", O = "üÖæ", 
    P = "üÖø", Q = "üÜÄ", R = "üÜÅ", S = "üÜÇ", T = "üÜÉ", 
    U = "üÜÑ", V = "üÜÖ", W = "üÜÜ", X = "üÜá", Y = "üÜà", Z = "üÜâ"
}

local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TitleBar = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local CloseButton = Instance.new("TextButton")
local MinimizeButton = Instance.new("TextButton")
local ContentFrame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local SendButton = Instance.new("TextButton")
local NotificationFrame = Instance.new("Frame")
local NotificationText = Instance.new("TextLabel")

ScreenGui.Parent = player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.4, 0, 0.4, 0)
MainFrame.Size = UDim2.new(0, 300, 0, 180)
MainFrame.ClipsDescendants = true

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 10)
Corner.Parent = MainFrame

TitleBar.Name = "TitleBar"
TitleBar.Parent = MainFrame
TitleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0, 30)

Title.Name = "Title"
Title.Parent = TitleBar
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Bypasser - Made by Jamjam"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 18

CloseButton.Name = "CloseButton"
CloseButton.Parent = TitleBar
CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseButton.Position = UDim2.new(1, -25, 0, 5)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14

MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = TitleBar
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
MinimizeButton.Position = UDim2.new(1, -50, 0, 5)
MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
MinimizeButton.TextSize = 14

ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.Size = UDim2.new(1, 0, 1, -30)

TextBox.Parent = ContentFrame
TextBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextBox.Position = UDim2.new(0.1, 0, 0.2, 0)
TextBox.Size = UDim2.new(0.8, 0, 0.3, 0)
TextBox.Font = Enum.Font.SourceSansSemibold
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextScaled = true
TextBox.PlaceholderText = "Enter text here..."
Corner:Clone().Parent = TextBox

SendButton.Parent = ContentFrame
SendButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
SendButton.Position = UDim2.new(0.35, 0, 0.6, 0)
SendButton.Size = UDim2.new(0.3, 0, 0.2, 0)
SendButton.Font = Enum.Font.SourceSansBold
SendButton.Text = "Send"
SendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SendButton.TextScaled = true
Corner:Clone().Parent = SendButton

local function convertToEmoji(text)
    local convertedText = ""
    for i = 1, #text do
        local char = text:upper():sub(i, i)
        if emojiLetters[char] then
            convertedText = convertedText .. emojiLetters[char]
        else
            convertedText = convertedText .. text:sub(i, i)
        end
    end
    return convertedText
end

local function showNotification(message)
    NotificationText.Text = message
    NotificationFrame.Visible = true
    local tween = TweenService:Create(NotificationFrame, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -100, 0, 20)})
    tween:Play()
    wait(2)
    local hideTween = TweenService:Create(NotificationFrame, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -100, 0, -50)})
    hideTween:Play()
    hideTween.Completed:Connect(function()
        NotificationFrame.Visible = false
    end)
end

SendButton.MouseButton1Click:Connect(function()
    local text = TextBox.Text
    local convertedText = convertToEmoji(text)
    local success, result = pcall(function()
        return TextChatService.TextChannels.RBXGeneral:SendAsync(convertedText)
    end)
    
    TextBox.Text = ""
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        ContentFrame.Visible = false
        MainFrame:TweenSize(UDim2.new(0, 300, 0, 30), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)
    else
        MainFrame:TweenSize(UDim2.new(0, 300, 0, 180), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.5, true)
        wait(0.5)
        ContentFrame.Visible = true
    end
end)

local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
